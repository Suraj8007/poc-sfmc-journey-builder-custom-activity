{"version":3,"file":"discount-code-activity.js","sources":["webpack:///webpack/bootstrap","webpack:///./modules/discount-code/src/index.js","webpack:///./node_modules/postmonger/postmonger.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./modules/discount-code/src/index.js\");\n","// JOURNEY BUILDER CUSTOM ACTIVITY - discountCode ACTIVITY\n// ````````````````````````````````````````````````````````````\n// This example demonstrates a custom activity that utilizes an external service to generate\n// a discount code where the user inputs the discount percent in the configuration.\n\nimport Postmonger from \"postmonger\";\n\n// Create a new connection for this session.\nconst connection = new Postmonger.Session();\n\n// We'll store the activity on this variable when we receive it\nlet activity = null;\n\n// Wait for the document to load before we do anything\ndocument.addEventListener(\"DOMContentLoaded\", function main() {\n  // Setup a test harness so we can interact with our custom activity\n  setupExampleTestHarness();\n\n  // Setup our UI event handlers\n  setupEventHandlers();\n\n  // Bind the initActivity event...\n  connection.on(\"initActivity\", onInitActivity);\n\n  // Signal Journey Builder that we're ready to receive the activity payload\n  connection.trigger(\"ready\");\n});\n\n// This function is triggered by Journey Builder via Postmonger.\nfunction onInitActivity(payload) {\n  activity = payload;\n  connection.trigger(\"requestSchema\");\n  connection.on(\"requestedSchema\", function (data) {\n    const schema = data[\"schema\"];\n    for (let i = 0, l = schema.length; i < l; i++) {\n      let inArg = {};\n      let attr = schema[i].key;\n      let keyIndex = attr.lastIndexOf(\".\") + 1;\n      inArg[attr.substring(keyIndex)] = \"{{\" + attr + \"}}\";\n      activity[\"arguments\"].execute.inArguments[0][`${attr.substring(keyIndex)}`] = \"{{\" + attr + \"}}\";\n    }\n  });\n  console.log(\"activity:\", JSON.stringify(activity, null, 4));\n  const hasInArguments = Boolean(activity.arguments && activity.arguments.execute && activity.arguments.execute.inArguments.length > 0);\n  const inArguments = hasInArguments ? activity.arguments.execute.inArguments : [];\n\n  // Check if a discount code back argument was set.\n  const discountArgument = inArguments.find(arg => arg.discount);\n  if (discountArgument) {\n    selectDiscountCodeOption(discountArgument.discount);\n  }\n}\nasync function onDoneButtonClick() {\n  activity.metaData.isConfigured = true;\n\n  // Get the selected discount code from the dropdown\n  const select = document.getElementById(\"discount-code\");\n  const option = select.options[select.selectedIndex];\n\n  // Get the custom discount code from the input field\n  const emailAddress = document.getElementById(\"email-address\").value;\n\n  // If a custom discount code is entered, use it; otherwise, use the dropdown selection\n  const discountValue = option.value;\n\n  // Set the inArguments with the discount code and other attributes\n  activity.arguments.execute.inArguments = [{\n    discount: discountValue,\n    EmailAddress: emailAddress,\n    firstName: \"{{Contact.Attribute.FirstName}}\"\n  }];\n  activity.name = `Issue ${activity.arguments.execute.inArguments[0].discount}% Code`;\n  console.log(\"sending message back to updateActivity\", JSON.stringify(activity, null, 4));\n  connection.trigger(\"updateActivity\", activity);\n}\nfunction onCancelButtonClick() {\n  connection.trigger(\"setActivityDirtyState\", false);\n  connection.trigger(\"requestInspectorClose\");\n}\nfunction onDiscountCodeSelectChange() {\n  const select = document.getElementById(\"discount-code\");\n  if (select.selectedIndex) {\n    document.getElementById(\"done\").removeAttribute(\"disabled\");\n  } else {\n    document.getElementById(\"done\").setAttribute(\"disabled\", \"\");\n  }\n  connection.trigger(\"setActivityDirtyState\", true);\n}\nfunction selectDiscountCodeOption(value) {\n  const select = document.getElementById(\"discount-code\");\n  const selectOption = select.querySelector(`[value='${value}']`);\n  if (selectOption) {\n    selectOption.selected = true;\n    onDiscountCodeSelectChange();\n  } else {\n    console.log(\"Could not select value from list\", `[value='${value}]'`);\n  }\n}\nfunction setupEventHandlers() {\n  document.getElementById(\"done\").addEventListener(\"click\", onDoneButtonClick);\n  document.getElementById(\"cancel\").addEventListener(\"click\", onCancelButtonClick);\n  document.getElementById(\"discount-code\").addEventListener(\"change\", onDiscountCodeSelectChange);\n\n  // Listen for changes in the custom discount code input field\n  document.getElementById(\"custom-discount-code\").addEventListener(\"input\", function () {\n    connection.trigger(\"setActivityDirtyState\", true); // Mark the activity as dirty\n    if (document.getElementById(\"custom-discount-code\").value) {\n      document.getElementById(\"done\").removeAttribute(\"disabled\");\n    } else {\n      document.getElementById(\"done\").setAttribute(\"disabled\", \"\");\n    }\n  });\n}\n\n// This function is for example purposes only. It sets up a Postmonger session that emulates how Journey Builder works.\nfunction setupExampleTestHarness() {\n  const isLocalhost = location.hostname === \"localhost\" || location.hostname === \"127.0.0.1\";\n  if (!isLocalhost) {\n    return;\n  }\n  const jbSession = new Postmonger.Session();\n  window.jb = {};\n  jbSession.on(\"setActivityDirtyState\", function (value) {\n    console.log(\"[echo] setActivityDirtyState -> \", value);\n  });\n  jbSession.on(\"requestInspectorClose\", function () {\n    console.log(\"[echo] requestInspectorClose\");\n  });\n  jbSession.on(\"updateActivity\", async function (activity) {\n    console.log(\"[echo] updateActivity -> \", JSON.stringify(activity, null, 4));\n  });\n  jbSession.on(\"ready\", function () {\n    console.log(\"[echo] ready\");\n  });\n  jb.ready = function () {\n    jbSession.trigger(\"initActivity\", {\n      name: \"\",\n      key: \"EXAMPLE-1\",\n      metaData: {},\n      configurationArguments: {},\n      arguments: {\n        executionMode: \"{{Context.ExecutionMode}}\",\n        definitionId: \"{{Context.DefinitionId}}\",\n        activityId: \"{{Activity.Id}}\",\n        contactKey: \"{{Context.ContactKey}}\",\n        execute: {\n          inArguments: [{\n            discount: 10\n          }],\n          outArguments: []\n        },\n        startActivityKey: \"{{Context.StartActivityKey}}\",\n        definitionInstanceId: \"{{Context.DefinitionInstanceId}}\",\n        requestObjectId: \"{{Context.RequestObjectId}}\"\n      }\n    });\n  };\n}","/*\r\n * Postmonger.js   version 0.0.14\r\n * https://github.com/kevinparkerson/postmonger\r\n *\r\n * Copyright (c) 2012-2014 Kevin Parkerson\r\n * Available via the MIT or new BSD license.\r\n * Further details and documentation:\r\n * http://kevinparkerson.github.com/postmonger/\r\n *\r\n *///\r\n\r\n(function (root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine('postmonger', [], function () { return factory(root); });\r\n\t} else if (typeof exports === 'object') {\r\n\t\tmodule.exports = factory(root);\r\n\t} else {\r\n\t\t// OR use browser globals if AMD is not present\r\n\t\troot.Postmonger = factory(root);\r\n\t}\r\n}(this, function (root) {\r\n\troot = root || window;\r\n\r\n\tvar exports = exports || undefined;\r\n\tvar Postmonger;\r\n\tvar previous = root.Postmonger;\r\n\tvar _window = (root.addEventListener || root.attachEvent) ? root : window;\r\n\tvar Connection, Events, Session;\r\n\r\n\t//Set up Postmonger namespace, provide noConflict support, and version\r\n\tif (typeof(exports) !== 'undefined') {\r\n\t\tPostmonger = exports;\r\n\t} else {\r\n\t\tPostmonger = {};\r\n\t}\r\n\tPostmonger.noConflict = function () {\r\n\t\troot.Postmonger = previous;\r\n\t\treturn this;\r\n\t};\r\n\tPostmonger.version = '0.0.14';\r\n\r\n\t//Create a new Postmonger Connection\r\n\tConnection = Postmonger.Connection = function (options) {\r\n\t\toptions = (typeof(options) === 'object') ? options : {};\r\n\r\n\t\tvar connect = options.connect || _window.parent;\r\n\t\tvar from = options.from || '*';\r\n\t\tvar to = options.to || '*';\r\n\t\tvar self = this;\r\n\r\n\t\t//If string, grab based on id\r\n\t\tif (typeof(connect) === 'string') {\r\n\t\t\tconnect = document.getElementById(connect);\r\n\t\t}\r\n\r\n\t\t//If no connection, check for jquery object\r\n\t\tif (connect && !connect.postMessage && connect.jquery) {\r\n\t\t\tconnect = connect.get(0);\r\n\t\t}\r\n\r\n\t\t//If still no connection, check for iframe\r\n\t\tif (connect && !connect.postMessage && (connect.contentWindow || connect.contentDocument)) {\r\n\t\t\tconnect = connect.contentWindow || connect.contentDocument;\r\n\t\t}\r\n\r\n\t\t//Throw warning if connection could not be made\r\n\t\tif (!(connect && connect.postMessage)) {\r\n\t\t\tif (_window.console && _window.console.warn) {\r\n\t\t\t\t_window.console.warn(' Warning: Postmonger could not establish connection with ', options.connect);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tself.connect = connect;\r\n\t\tself.to = to;\r\n\t\tself.from = from;\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t//Postmonger.Events - Hacked together from Backbone.Events and two Underscore functions.\r\n\tEvents = Postmonger.Events = function () {\r\n\t\tvar eventSplitter = /\\s+/;\r\n\t\tvar self = this;\r\n\r\n\t\tself._callbacks = {};\r\n\r\n\t\tself._has = function (obj, key) {\r\n\t\t\treturn Object.prototype.hasOwnProperty.call(obj, key);\r\n\t\t};\r\n\r\n\t\tself._keys = function (obj) {\r\n\t\t\tif (Object.keys) {\r\n\t\t\t\treturn Object.keys(obj);\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof(obj)!=='object') {\r\n\t\t\t\tthrow new TypeError('Invalid object');\r\n\t\t\t}\r\n\r\n\t\t\tvar keys = [];\r\n\r\n\t\t\tfor (var key in obj) {\r\n\t\t\t\tif (self._has(obj, key)) {\r\n\t\t\t\t\tkeys[keys.length] = key;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn keys;\r\n\t\t};\r\n\r\n\t\tself.on = function (events, callback, context) {\r\n\t\t\tvar calls, event, node, tail, list;\r\n\r\n\t\t\tif (!callback) {\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\r\n\t\t\tevents = events.split(eventSplitter);\r\n\r\n\t\t\tself._callbacks = self._callbacks || {};\r\n\t\t\tcalls = self._callbacks;\r\n\r\n\t\t\twhile (event = events.shift()) {\r\n\t\t\t\tlist = calls[event];\r\n\r\n\t\t\t\tnode = (list) ? list.tail : {};\r\n\t\t\t\ttail = {};\r\n\r\n\t\t\t\tnode.next = tail;\r\n\t\t\t\tnode.context = context;\r\n\t\t\t\tnode.callback = callback;\r\n\r\n\t\t\t\tcalls[event] = {\r\n\t\t\t\t\ttail: tail,\r\n\t\t\t\t\tnext: (list) ? list.next : node\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t};\r\n\r\n\t\tself.off = function (events, callback, context) {\r\n\t\t\tvar calls = self._callbacks;\r\n\t\t\tvar event, node, tail, cb, ctx;\r\n\r\n\t\t\tif (!calls) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!(events || callback || context)) {\r\n\t\t\t\tdelete self._callbacks;\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\r\n\t\t\tevents = (events) ? events.split(eventSplitter) : self._keys(calls);\r\n\r\n\t\t\twhile (event = events.shift()) {\r\n\t\t\t\tnode = calls[event];\r\n\t\t\t\tdelete calls[event];\r\n\t\t\t\tif (!node || !(callback || context)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttail = node.tail;\r\n\t\t\t\twhile ((node = node.next) !== tail) {\r\n\t\t\t\t\tcb = node.callback;\r\n\t\t\t\t\tctx = node.context;\r\n\t\t\t\t\tif (((callback && cb) !== callback) || ((context && ctx) !== context)) {\r\n\t\t\t\t\t\tself.on(event, cb, ctx);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t};\r\n\r\n\t\tself.trigger = function (events) {\r\n\t\t\tvar event, node, calls, tail, args, all, rest;\r\n\r\n\t\t\tif (!(calls = self._callbacks)) {\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\r\n\t\t\tall = calls.all;\r\n\t\t\tevents = events.split(eventSplitter);\r\n\t\t\trest = Array.prototype.slice.call(arguments, 1);\r\n\r\n\t\t\twhile (event = events.shift()) {\r\n\t\t\t\tif (node = calls[event]) {\r\n\t\t\t\t\ttail = node.tail;\r\n\t\t\t\t\twhile ((node = node.next) !== tail) {\r\n\t\t\t\t\t\tnode.callback.apply(node.context || self, rest);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (node = all) {\r\n\t\t\t\t\ttail = node.tail;\r\n\t\t\t\t\targs = [event].concat(rest);\r\n\t\t\t\t\twhile ((node = node.next) !== tail) {\r\n\t\t\t\t\t\tnode.callback.apply(node.context || self, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t};\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t//Create a new Postmonger Session\r\n\tSession = Postmonger.Session = function () {\r\n\t\tvar args = (arguments.length>0) ? Array.prototype.slice.call(arguments, 0) : [{}];\r\n\t\tvar connections = [];\r\n\t\tvar incoming = new Events();\r\n\t\tvar outgoing = new Events();\r\n\t\tvar self = this;\r\n\t\tvar connection, i, j, l, ln, postMessageListener;\r\n\r\n\t\t//Session API hooks\r\n\t\tself.on = incoming.on;\r\n\t\tself.off = incoming.off;\r\n\t\tself.trigger = outgoing.trigger;\r\n\t\tself.end = function () {\r\n\t\t\tincoming.off();\r\n\t\t\toutgoing.off();\r\n\t\t\tif (_window.removeEventListener) {\r\n\t\t\t\t_window.removeEventListener('message', postMessageListener, false);\r\n\t\t\t} else if (_window.detachEvent) {\r\n\t\t\t\t_window.detachEvent('onmessage', postMessageListener);\r\n\t\t\t}\r\n\t\t\treturn self;\r\n\t\t};\r\n\r\n\t\t//Establishing connections\r\n\t\tfor (i=0, l=args.length; i<l; i++) {\r\n\t\t\tconnection = new Connection(args[i]);\r\n\t\t\tif (connection) {\r\n\t\t\t\tfor (j=0, ln=connections.length; j<ln; j++) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tconnections[j].connect === connection.connect &&\r\n\t\t\t\t\t\tconnections[j].from === connection.from &&\r\n\t\t\t\t\t\tconnections[j].to === connection.to\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tconnection = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (connection) {\r\n\t\t\t\t\tconnections.push(connection);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Listener for incoming messages\r\n\t\tpostMessageListener = function(event){\r\n\t\t\tvar conn = null;\r\n\t\t\tvar message = [];\r\n\t\t\tvar data;\r\n\t\t\tvar k, len;\r\n\r\n\t\t\t//Attempt to find the connection we're dealing with\r\n\t\t\tfor (k=0, len=connections.length; k<len; k++) {\r\n\t\t\t\tif (connections[k].connect === event.source) {\r\n\t\t\t\t\tconn = connections[k];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Check if we've found the connection\r\n\t\t\tif (!conn) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t//Check if the message is from the expected origin\r\n\t\t\tif (conn.from !== '*' && conn.from !== event.origin) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t//Check the data that's been passed\r\n\t\t\ttry{\r\n\t\t\t\tdata = JSON.parse(event.data);\r\n\t\t\t\tif(!data.e){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}catch(e){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t//Format the passed in data\r\n\t\t\tmessage.push(data.e);\r\n\t\t\tdelete data.e;\r\n\t\t\tfor (k in data) {\r\n\t\t\t\tmessage.push(data[k]);\r\n\t\t\t}\r\n\r\n\t\t\t//Send the message\r\n\t\t\tincoming['trigger'].apply(root, message);\r\n\t\t};\r\n\r\n\t\t//Add the listener\r\n\t\tif (_window.addEventListener) {\r\n\t\t\t_window.addEventListener('message', postMessageListener, false);\r\n\t\t} else if(_window.attachEvent) {\r\n\t\t\t_window.attachEvent('onmessage', postMessageListener);\r\n\t\t} else{\r\n\t\t\tif (_window.console && _window.console.warn) {\r\n\t\t\t\t_window.console.warn('WARNING: Postmonger could not listen for messages on window %o', _window);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//Sending outgoing messages\r\n\t\toutgoing.on('all', function () {\r\n\t\t\tvar args = Array.prototype.slice.call(arguments, 0);\r\n\t\t\tvar message = {};\r\n\t\t\tvar k, len;\r\n\r\n\t\t\tmessage.e = args[0];\r\n\r\n\t\t\tfor (k=1, len=args.length; k<len; k++) {\r\n\t\t\t\tmessage['a' + k] = args[k];\r\n\t\t\t}\r\n\r\n\t\t\tfor (k=0, len=connections.length; k<len; k++) {\r\n\t\t\t\tconnections[k].connect.postMessage(JSON.stringify(message), connections[k].to);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\treturn Postmonger;\r\n}));\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClsourceRoot":""}